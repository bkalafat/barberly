name: Backend CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "backend/**"

env:
  DOTNET_VERSION: "8.0.x"
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Use Supabase database for CI
  ConnectionStrings__DefaultConnection: ${{ secrets.SUPABASE_CONNECTION }}

jobs:
  # Build and test
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore backend/src/Barberly.sln

      - name: Install EF Core tools
        run: dotnet tool install --global dotnet-ef

      - name: Run EF migrations
        run: |
          dotnet ef database update \
            --project backend/src/Barberly.Infrastructure/Barberly.Infrastructure.csproj \
            --startup-project backend/src/Barberly.Api/Barberly.Api.csproj \
            --context BarberlyDbContext

      - name: Build solution
        run: dotnet build backend/src/Barberly.sln --no-restore --configuration Release

      - name: Run unit tests
        run: >
          dotnet test backend/tests/Barberly.Domain.Tests/Barberly.Domain.Tests.csproj
          --no-build --configuration Release
          --logger trx --results-directory ./test-results
          --collect:"XPlat Code Coverage"
          --verbosity minimal

      - name: Run application tests
        run: >
          dotnet test backend/tests/Barberly.Application.Tests/Barberly.Application.Tests.csproj
          --no-build --configuration Release
          --logger trx --results-directory ./test-results
          --collect:"XPlat Code Coverage"
          --verbosity minimal

      - name: Run integration tests
        run: >
          dotnet test backend/tests/Barberly.IntegrationTests/Barberly.IntegrationTests.csproj
          --no-build --configuration Release
          --logger trx --results-directory ./test-results
          --collect:"XPlat Code Coverage"
          --verbosity minimal

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./test-results
          retention-days: 7
